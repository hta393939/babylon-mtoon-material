{"version":3,"file":"main.js","mappings":"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","sources":["webpack://babylon-mtoon-material/webpack/universalModuleDefinition","webpack://babylon-mtoon-material/./src/inspectable-custom-properties.ts","webpack://babylon-mtoon-material/./src/mtoon-material-defines.ts","webpack://babylon-mtoon-material/./src/mtoon-material.ts","webpack://babylon-mtoon-material/./src/mtoon-outline-renderer.ts","webpack://babylon-mtoon-material/./src/test/index.ts","webpack://babylon-mtoon-material/webpack/bootstrap","webpack://babylon-mtoon-material/webpack/runtime/chunk loaded","webpack://babylon-mtoon-material/webpack/runtime/compat get default export","webpack://babylon-mtoon-material/webpack/runtime/define property getters","webpack://babylon-mtoon-material/webpack/runtime/global","webpack://babylon-mtoon-material/webpack/runtime/hasOwnProperty shorthand","webpack://babylon-mtoon-material/webpack/runtime/make namespace object","webpack://babylon-mtoon-material/webpack/runtime/jsonp chunk loading","webpack://babylon-mtoon-material/webpack/before-startup","webpack://babylon-mtoon-material/webpack/startup","webpack://babylon-mtoon-material/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylon-mtoon-material\"] = factory();\n\telse\n\t\troot[\"babylon-mtoon-material\"] = factory();\n})(self, () => {\nreturn ","import type { IInspectable } from '@babylonjs/core/Misc/iInspectable';\r\nimport { InspectableType } from '@babylonjs/core/Misc/iInspectable';\r\n\r\n/**\r\n * MToonMaterial に Inspector 上で調整可能なパラメータを設定する\r\n * @link https://doc.babylonjs.com/toolsAndResources/tools/inspector#extensibility\r\n */\r\nexport function getInspectableCustomProperties(): IInspectable[] {\r\n    return [\r\n        {\r\n            label: 'DiffuseColor',\r\n            propertyName: 'diffuseColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'AmbientColor',\r\n            propertyName: 'ambientColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'EmissiveColor',\r\n            propertyName: 'emissiveColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'ShadeColor',\r\n            propertyName: 'shadeColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'RimColor',\r\n            propertyName: 'rimColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'OutlineColor',\r\n            propertyName: 'outlineColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'ReceiveShadowRate',\r\n            propertyName: 'receiveShadowRate',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'ShadingGradeRate',\r\n            propertyName: 'shadingGradeRate',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'ShadeShift',\r\n            propertyName: 'shadeShift',\r\n            type: InspectableType.Slider,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'ShadeToony',\r\n            propertyName: 'shadeToony',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'LightColorAttenuation',\r\n            propertyName: 'lightColorAttenuation',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'IndirectLightIntensity',\r\n            propertyName: 'indirectLightIntensity',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'RimLightingMix',\r\n            propertyName: 'rimLightingMix',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'RimFresnelPower',\r\n            propertyName: 'rimFresnelPower',\r\n            type: InspectableType.Slider,\r\n            min: 0.01,\r\n            max: 100,\r\n            step: 4,\r\n        },\r\n        {\r\n            label: 'RimLift',\r\n            propertyName: 'rimLift',\r\n            type: InspectableType.Slider,\r\n            min: 0.0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'OutlineWidth',\r\n            propertyName: 'outlineWidth',\r\n            type: InspectableType.Slider,\r\n            min: 0.01,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'OutlineScaledMaxDistance',\r\n            propertyName: 'outlineScaledMaxDistance',\r\n            type: InspectableType.Slider,\r\n            min: 1.0,\r\n            max: 10.0,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'OutlineLightingMix',\r\n            propertyName: 'outlineLightingMix',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'DebugMode',\r\n            propertyName: 'debugMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'OutlineWidthMode',\r\n            propertyName: 'outlineWidthMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'OutlineColorMode',\r\n            propertyName: 'outlineColorMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'CullMode',\r\n            propertyName: 'cullMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'OutlineCullMode',\r\n            propertyName: 'outlineCullMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'AlphaCutOff',\r\n            propertyName: 'alphaCutOff',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'UV Animation Scroll X',\r\n            propertyName: 'uvAnimationScrollX',\r\n            type: InspectableType.Slider,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        },\r\n        {\r\n            label: 'UV Animation Scroll Y',\r\n            propertyName: 'uvAnimationScrollY',\r\n            type: InspectableType.Slider,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        },\r\n        {\r\n            label: 'UV Animation Rotation',\r\n            propertyName: 'uvAnimationRotation',\r\n            type: InspectableType.Slider,\r\n            min: -0.5,\r\n            max: 0.5,\r\n            step: 0.01,\r\n        },\r\n    ];\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { MaterialDefines } from '@babylonjs/core/Materials/materialDefines';\r\nimport type { IImageProcessingConfigurationDefines } from '@babylonjs/core/Materials/imageProcessingConfiguration';\r\n\r\n/**\r\n * Material Defines\r\n */\r\nexport class MToonMaterialDefines extends MaterialDefines implements IImageProcessingConfigurationDefines {\r\n    /** @see light-fragment.frag */\r\n    public CUSTOMUSERLIGHTING = true;\r\n\r\n    // MToon Specific\r\n    public MTOON_OUTLINE_WIDTH_WORLD = false;\r\n    public MTOON_OUTLINE_WIDTH_SCREEN = false;\r\n    public MTOON_OUTLINE_COLOR_FIXED = false;\r\n    public MTOON_OUTLINE_COLOR_MIXED = false;\r\n    public MTOON_DEBUG_NORMAL = false;\r\n    public MTOON_DEBUG_LITSHADERRATE = false;\r\n\r\n    // MToon textures\r\n    public SHADE = false;\r\n    public SHADEDIRECTUV = 0;\r\n    public RECEIVE_SHADOW = false;\r\n    public RECEIVE_SHADOWDIRECTUV = 0;\r\n    public SHADING_GRADE = false;\r\n    public SHADING_GRADEDIRECTUV = 0;\r\n    public RIM = false;\r\n    public RIMDIRECTUV = 0;\r\n    public MATCAP = false;\r\n    public MATCAPDIRECTUV = 0;\r\n    public OUTLINE_WIDTH = false;\r\n    public OUTLINE_WIDTHDIRECTUV = 0;\r\n    public UV_ANIMATION_MASK = false;\r\n    public UV_ANIMATION_MASKDIRECTUV = 0;\r\n\r\n    // Misc\r\n    public MAINUV1 = false;\r\n    public MAINUV2 = false;\r\n    public MAINUV3 = false;\r\n    public MAINUV4 = false;\r\n    public MAINUV5 = false;\r\n    public MAINUV6 = false;\r\n    public DIFFUSE = false;\r\n    public DIFFUSEDIRECTUV = 0;\r\n    public BAKED_VERTEX_ANIMATION_TEXTURE = false;\r\n    // public AMBIENT = false;\r\n    // public AMBIENTDIRECTUV = 0;\r\n    // public OPACITY = false;\r\n    // public OPACITYDIRECTUV = 0;\r\n    // public OPACITYRGB = false;\r\n    // public REFLECTION = false;\r\n    public EMISSIVE = false;\r\n    public EMISSIVEDIRECTUV = 0;\r\n    // public SPECULAR = false;\r\n    // public SPECULARDIRECTUV = 0;\r\n    public BUMP = false;\r\n    public BUMPDIRECTUV = 0;\r\n    public PARALLAX = false;\r\n    public PARALLAXOCCLUSION = false;\r\n    // public SPECULAROVERALPHA = false;\r\n    public CLIPPLANE = false;\r\n    public CLIPPLANE2 = false;\r\n    public CLIPPLANE3 = false;\r\n    public CLIPPLANE4 = false;\r\n    public CLIPPLANE5 = false;\r\n    public CLIPPLANE6 = false;\r\n    public ALPHATEST = false;\r\n    public DEPTHPREPASS = false;\r\n    public ALPHAFROMDIFFUSE = false;\r\n    public POINTSIZE = false;\r\n    public FOG = false;\r\n    // public SPECULARTERM = false;\r\n    // public DIFFUSEFRESNEL = false;\r\n    // public OPACITYFRESNEL = false;\r\n    // public REFLECTIONFRESNEL = false;\r\n    // public REFRACTIONFRESNEL = false;\r\n    // public EMISSIVEFRESNEL = false;\r\n    // public FRESNEL = false;\r\n    public NORMAL = false;\r\n    // public TANGENT = false;\r\n    public UV1 = false;\r\n    public UV2 = false;\r\n    public UV3 = false;\r\n    public UV4 = false;\r\n    public UV5 = false;\r\n    public UV6 = false;\r\n    public VERTEXCOLOR = false;\r\n    public VERTEXALPHA = false;\r\n    public NUM_BONE_INFLUENCERS = 0;\r\n    public BonesPerMesh = 0;\r\n    public BONETEXTURE = false;\r\n    public BONES_VELOCITY_ENABLED = false;\r\n    public INSTANCES = false;\r\n    public THIN_INSTANCES = false;\r\n    // public INSTANCESCOLOR = false;\r\n    // public GLOSSINESS = false;\r\n    // public ROUGHNESS = false;\r\n    // public EMISSIVEASILLUMINATION = false;\r\n    // public LINKEMISSIVEWITHDIFFUSE = false;\r\n    // public REFLECTIONFRESNELFROMSPECULAR = false;\r\n    // public LIGHTMAP = false;\r\n    // public LIGHTMAPDIRECTUV = 0;\r\n    public OBJECTSPACE_NORMALMAP = false;\r\n    // public USELIGHTMAPASSHADOWMAP = false;\r\n    // public REFLECTIONMAP_3D = false;\r\n    // public REFLECTIONMAP_SPHERICAL = false;\r\n    // public REFLECTIONMAP_PLANAR = false;\r\n    // public REFLECTIONMAP_CUBIC = false;\r\n    // public USE_LOCAL_REFLECTIONMAP_CUBIC = false;\r\n    // public USE_LOCAL_REFRACTIONMAP_CUBIC = false;\r\n    // public REFLECTIONMAP_PROJECTION = false;\r\n    // public REFLECTIONMAP_SKYBOX = false;\r\n    // public REFLECTIONMAP_EXPLICIT = false;\r\n    // public REFLECTIONMAP_EQUIRECTANGULAR = false;\r\n    // public REFLECTIONMAP_EQUIRECTANGULAR_FIXED = false;\r\n    // public REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED = false;\r\n    // public REFLECTIONMAP_OPPOSITEZ = false;\r\n    // public INVERTCUBICMAP = false;\r\n    public LOGARITHMICDEPTH = false;\r\n    // public REFRACTION = false;\r\n    // public REFRACTIONMAP_3D = false;\r\n    // public REFLECTIONOVERALPHA = false;\r\n    public TWOSIDEDLIGHTING = false;\r\n    public SHADOWFLOAT = false;\r\n    public MORPHTARGETS = false;\r\n    public MORPHTARGETS_NORMAL = false;\r\n    public MORPHTARGETS_TANGENT = false;\r\n    public MORPHTARGETS_UV = false;\r\n    public NUM_MORPH_INFLUENCERS = 0;\r\n    public MORPHTARGETS_TEXTURE = false;\r\n    public NONUNIFORMSCALING = false; // https://playground.babylonjs.com#V6DWIH\r\n    public PREMULTIPLYALPHA = false; // https://playground.babylonjs.com#LNVJJ7\r\n    public ALPHATEST_AFTERALLALPHACOMPUTATIONS = false;\r\n    public ALPHABLEND = true;\r\n\r\n    public PREPASS = false;\r\n    public PREPASS_IRRADIANCE = false;\r\n    public PREPASS_IRRADIANCE_INDEX = -1;\r\n    public PREPASS_ALBEDO_SQRT = false;\r\n    public PREPASS_ALBEDO_SQRT_INDEX = -1;\r\n    public PREPASS_DEPTH = false;\r\n    public PREPASS_DEPTH_INDEX = -1;\r\n    public PREPASS_NORMAL = false;\r\n    public PREPASS_NORMAL_INDEX = -1;\r\n    public PREPASS_POSITION = false;\r\n    public PREPASS_POSITION_INDEX = -1;\r\n    public PREPASS_VELOCITY = false;\r\n    public PREPASS_VELOCITY_INDEX = -1;\r\n    public PREPASS_REFLECTIVITY = false;\r\n    public PREPASS_REFLECTIVITY_INDEX = -1;\r\n    public SCENE_MRT_COUNT = 0;\r\n\r\n    // public RGBDLIGHTMAP = false;\r\n    // public RGBDREFLECTION = false;\r\n    // public RGBDREFRACTION = false;\r\n\r\n    public IMAGEPROCESSING = false;\r\n    public VIGNETTE = false;\r\n    public VIGNETTEBLENDMODEMULTIPLY = false;\r\n    public VIGNETTEBLENDMODEOPAQUE = false;\r\n    public TONEMAPPING = false;\r\n    public TONEMAPPING_ACES = false;\r\n    public CONTRAST = false;\r\n    public COLORCURVES = false;\r\n    public COLORGRADING = false;\r\n    public COLORGRADING3D = false;\r\n    public SAMPLER3DGREENDEPTH = false;\r\n    public SAMPLER3DBGRMAP = false;\r\n    public IMAGEPROCESSINGPOSTPROCESS = false;\r\n    public SKIPFINALCOLORCLAMP = false;\r\n    public MULTIVIEW = false;\r\n    public ORDER_INDEPENDENT_TRANSPARENCY = false;\r\n    public ORDER_INDEPENDENT_TRANSPARENCY_16BITS = false;\r\n\r\n    // /**\r\n    //  * If the reflection texture on this material is in linear color space\r\n    //  * @hidden\r\n    //  */\r\n    public IS_REFLECTION_LINEAR = false;\r\n    // /**\r\n    //  * If the refraction texture on this material is in linear color space\r\n    //  * @hidden\r\n    //  */\r\n    public IS_REFRACTION_LINEAR = false;\r\n    public EXPOSURE = false;\r\n\r\n    public FLIP_U = false;\r\n    public FLIP_V = false;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    constructor(externalProperties?: { [name: string]: { type: string; default: any } }) {\r\n        super(externalProperties);\r\n        this.rebuild();\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public setReflectionMode(modeToEnable: string) {\r\n        throw new Error('This material cannot use `setReflectionMode`');\r\n    }\r\n}\r\n","import { serialize, SerializationHelper, serializeAsColor3, expandToProperty, serializeAsTexture } from '@babylonjs/core/Misc/decorators';\r\nimport type { Observer } from '@babylonjs/core/Misc/observable';\r\nimport { SmartArray } from '@babylonjs/core/Misc/smartArray';\r\nimport type { IAnimatable } from '@babylonjs/core/Animations/animatable.interface';\r\n\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { Matrix, Vector4 } from '@babylonjs/core/Maths/math.vector';\r\nimport { Color3 } from '@babylonjs/core/Maths/math.color';\r\nimport { VertexBuffer } from '@babylonjs/core/Buffers/buffer';\r\nimport type { SubMesh } from '@babylonjs/core/Meshes/subMesh';\r\nimport type { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh';\r\nimport type { Mesh } from '@babylonjs/core/Meshes/mesh';\r\n// import { PrePassConfiguration } from \"./prePassConfiguration\";\r\n\r\nimport { ImageProcessingConfiguration } from '@babylonjs/core/Materials/imageProcessingConfiguration';\r\nimport type { ColorCurves } from '@babylonjs/core/Materials/colorCurves';\r\nimport type { ICustomShaderNameResolveOptions } from '@babylonjs/core/Materials/material';\r\nimport { Material } from '@babylonjs/core/Materials/material';\r\nimport type { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial';\r\nimport { PushMaterial } from '@babylonjs/core/Materials/pushMaterial';\r\nimport { MaterialHelper } from '@babylonjs/core/Materials/materialHelper';\r\n\r\nimport type { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture';\r\nimport type { RenderTargetTexture } from '@babylonjs/core/Materials/Textures/renderTargetTexture';\r\n\r\nimport { Constants } from '@babylonjs/core/Engines/constants';\r\nimport { EffectFallbacks } from '@babylonjs/core/Materials/effectFallbacks';\r\nimport type { IEffectCreationOptions } from '@babylonjs/core/Materials/effect';\r\nimport { Effect } from '@babylonjs/core/Materials/effect';\r\nimport { DetailMapConfiguration } from '@babylonjs/core/Materials/material.detailMapConfiguration';\r\nimport { MaterialPluginEvent } from '@babylonjs/core/Materials/materialPluginEvent';\r\nimport type { UniformBuffer } from '@babylonjs/core/Materials/uniformBuffer';\r\n\r\nimport { getInspectableCustomProperties } from './inspectable-custom-properties';\r\nimport { MToonOutlineRenderer } from './mtoon-outline-renderer';\r\nimport { MToonMaterialDefines } from './mtoon-material-defines';\r\n\r\nconst onCreatedEffectParameters = { effect: null as unknown as Effect, subMesh: null as unknown as Nullable<SubMesh> };\r\n\r\nimport UboDeclaration from './shaders/ubo-declaration.vert';\r\nimport VertexDeclaration from './shaders/vertex-declaration.vert';\r\nimport FragmentDeclaration from './shaders/fragment-declaration.frag';\r\nimport FragmentFunctions from './shaders/mtoon-fragment-functions.frag';\r\nimport BumpFragment from './shaders/bump-fragment.frag';\r\nimport LightFragment from './shaders/light-fragment.frag';\r\nimport VertexShader from './shaders/mtoon.vert';\r\nimport FragmentShader from './shaders/mtoon.frag';\r\n\r\n/**\r\n * Debug shading mode\r\n */\r\nexport enum DebugMode {\r\n    None = 0,\r\n    Normal,\r\n    LitShadeRate,\r\n}\r\n/**\r\n * Outline color mode\r\n */\r\nexport enum OutlineColorMode {\r\n    FixedColor = 0,\r\n    MixedLighting,\r\n}\r\n/**\r\n * Outline width mode\r\n */\r\nexport enum OutlineWidthMode {\r\n    None = 0,\r\n    WorldCorrdinates,\r\n    ScreenCoordinates,\r\n}\r\n/**\r\n * Cull mode\r\n */\r\nexport enum CullMode {\r\n    Off = 0,\r\n    Front,\r\n    Back,\r\n}\r\n\r\n/**\r\n * MToon は日本のアニメ的表現をすることを目標としています。\r\n * 主色 (Lit Color) と陰色 (Shade Color) の 2 色を、Lighting パラメータや光源環境に応じて混合することでそれを実現します。\r\n * VRM での出力パラメータとプロパティのマッピングは下記となります。\r\n *\r\n * MToon aims for making Japanese anime expressions.\r\n * It is achieved by mixing Lit Color and Shade Color based on Lighting parameters and light source environment.\r\n *\r\n * @see https://github.com/Santarh/MToon/\r\n * @see https://vrm.dev/univrm/shaders/mtoon/\r\n * @see https://doc.babylonjs.com/babylon101/materials\r\n */\r\nexport class MToonMaterial extends PushMaterial {\r\n    //#region Properties\r\n    //#region Textures\r\n    @serializeAsTexture('diffuseTexture')\r\n    private _diffuseTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * The basic texture of the material as viewed under a light.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesAndMiscDirty')\r\n    public diffuseTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('emissiveTexture')\r\n    private _emissiveTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Define texture of the material as if self lit.\r\n     * This will be mixed in the final result even in the absence of light.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public emissiveTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('bumpTexture')\r\n    private _bumpTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Bump mapping is a technique to simulate bump and dents on a rendered surface.\r\n     * These are made by creating a normal map from an image. The means to do this can be found on the web, a search for 'normal map generator' will bring up free and paid for methods of doing this.\r\n     * @see https://doc.babylonjs.com/how_to/more_materials#bump-map\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public bumpTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('shadeTexture')\r\n    private _shadeTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * The basic texture of the material as viewed does not receive a light\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public shadeTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('receiveShadowTexture')\r\n    private _receiveShadowTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Receiving shadow rate with texture\r\n     * receiveShadowRate * texture.a\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public receiveShadowTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('shadingGradeTexture')\r\n    private _shadingGradeTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Shading grade rate\r\n     * shadingGradeRate * (1.0 - texture.r))\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public shadingGradeTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('rimTexture')\r\n    private _rimTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Parametric Rim Lighting\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public rimTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('matCapTexture')\r\n    private _matCapTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * MatCap Lighting\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public matCapTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('outlineWidthTexture')\r\n    private _outlineWidthTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Adjust outline width\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public outlineWidthTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('outlineWidthTexture')\r\n    private _uvAnimationMaskTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * UV animation mask\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public uvAnimationMaskTexture: Nullable<BaseTexture> = null;\r\n\r\n    /**\r\n     * the list of textures\r\n     *\r\n     * @returns {Array<Nullable<BaseTexture>>}\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private get appendedTextures(): Array<Nullable<BaseTexture>> {\r\n        return [\r\n            this._diffuseTexture,\r\n            this._emissiveTexture,\r\n            this._bumpTexture,\r\n            this._shadeTexture,\r\n            this._receiveShadowTexture,\r\n            this._shadingGradeTexture,\r\n            this._rimTexture,\r\n            this._matCapTexture,\r\n            this._outlineWidthTexture,\r\n            this._uvAnimationMaskTexture,\r\n        ];\r\n    }\r\n    /**\r\n     * the list of active textures\r\n     *\r\n     * @returns {BaseTexture[]}\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private get appendedActiveTextures(): BaseTexture[] {\r\n        return this.appendedTextures.filter((t) => t !== null) as BaseTexture[];\r\n    }\r\n    //#endregion\r\n    //#region Colors\r\n    /**\r\n     * Multiplier of diffuseTexture\r\n     */\r\n    @serializeAsColor3('diffuse')\r\n    public diffuseColor = new Color3(1.0, 1.0, 1.0);\r\n    /**\r\n     * babylon.js Ambient light\r\n     */\r\n    @serialize('ambient')\r\n    public ambientColor = new Color3(0.0, 0.0, 0.0);\r\n    /**\r\n     * Emissive color\r\n     */\r\n    @serialize('emissive')\r\n    public emissiveColor = new Color3(0.0, 0.0, 0.0);\r\n    /**\r\n     * Multiplier of shadeTexture\r\n     */\r\n    @serialize('shade')\r\n    public shadeColor = new Color3(0.97, 0.81, 0.86);\r\n    /**\r\n     * Rim color\r\n     */\r\n    @serialize('rim')\r\n    public rimColor = new Color3(0.0, 0.0, 0.0);\r\n    /**\r\n     * Outline color\r\n     */\r\n    @serialize('outline')\r\n    public outlineColor = new Color3(0.0, 0.0, 0.0);\r\n    //#endregion\r\n    //#region StandardMaterial parameters\r\n    /**\r\n     * If true, the emissive value is added into the end result, otherwise it is multiplied in.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public readonly useEmissiveAsIllumination = false;\r\n    /**\r\n     * If true, some kind of energy conservation will prevent the end result to be more than 1 by reducing\r\n     * the emissive level when the final color is close to one.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public readonly linkEmissiveWithDiffuse = false;\r\n    /**\r\n     * Specifies that the material will keeps the reflection highlights over a transparent surface (only the most luminous ones).\r\n     * A car glass is a good exemple of that. When the street lights reflects on it you can not see what is behind.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public readonly useReflectionOverAlpha = false;\r\n    @serialize('disableLighting')\r\n    private _disableLighting = false;\r\n    /**\r\n     * Does lights from the scene impacts this material.\r\n     * It can be a nice trick for performance to disable lighting on a fully emissive material.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsLightsDirty')\r\n    public disableLighting: boolean;\r\n    /**\r\n     * Allows using an object space normal map (instead of tangent space).\r\n     * No support\r\n     */\r\n    public readonly useObjectSpaceNormalMap: boolean = false;\r\n    /**\r\n     * Is parallax enabled or not.\r\n     * @see https://doc.babylonjs.com/how_to/using_parallax_mapping\r\n     * No support\r\n     */\r\n    public readonly useParallax: boolean = false;\r\n    /**\r\n     * Is parallax occlusion enabled or not.\r\n     * If true, the outcome is way more realistic than traditional Parallax but you can expect a performance hit that worthes consideration.\r\n     * @see https://doc.babylonjs.com/how_to/using_parallax_mapping\r\n     * No support\r\n     */\r\n    public readonly useParallaxOcclusion: boolean = false;\r\n    /**\r\n     * No support for specular\r\n     */\r\n    public readonly specularSupported: boolean = false;\r\n    /**\r\n     * In case of light mapping, define whether the map contains light or shadow informations.\r\n     * No support\r\n     */\r\n    public readonly useLightmapAsShadowmap: boolean = false;\r\n    /**\r\n     * No support for vertex colors\r\n     */\r\n    public readonly useVertexColor: boolean = false;\r\n    /**\r\n     * Support for bones in shader\r\n     */\r\n    public readonly useBones: boolean = true;\r\n    /**\r\n     * Support for morph targets in shader\r\n     */\r\n    public readonly useMorphTargets: boolean = true;\r\n    /**\r\n     * No support for vertex alpha\r\n     */\r\n    public readonly useVertexAlpha: boolean = false;\r\n    /**\r\n     * No support for baked vertex animation\r\n     */\r\n    public readonly useBakedVertexAnimation: boolean = false;\r\n\r\n    /**\r\n     * Defines the alpha limits in alpha test mode.\r\n     */\r\n    @serialize()\r\n    public alphaCutOff = 0.4;\r\n    @serialize('useAlphaFromDiffuseTexture')\r\n    private _useAlphaFromDiffuseTexture = true;\r\n    /**\r\n     * Does the transparency come from the diffuse texture alpha channel.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesAndMiscDirty')\r\n    public useAlphaFromDiffuseTexture: boolean;\r\n    @serialize('maxSimultaneousLights')\r\n    private _maxSimultaneousLights = 4;\r\n    /**\r\n     * Defines the maximum number of lights that can be used in the material\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsLightsDirty')\r\n    public maxSimultaneousLights: number;\r\n    /**\r\n     * inverted state equals with Unity\r\n     */\r\n    @serialize('invertNormalMapX')\r\n    private _invertNormalMapX = true;\r\n    /**\r\n     * If sets to true, x component of normal map value will invert (x = 1.0 - x).\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public invertNormalMapX: boolean;\r\n    /**\r\n     * inverted state equals with Unity\r\n     */\r\n    @serialize('invertNormalMapY')\r\n    private _invertNormalMapY = true;\r\n    /**\r\n     * If sets to true, y component of normal map value will invert (y = 1.0 - y).\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public invertNormalMapY: boolean;\r\n    @serialize('twoSidedLighting')\r\n    private _twoSidedLighting = false;\r\n    /**\r\n     * If sets to true and backfaceCulling is false, normals will be flipped on the backside.\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public twoSidedLighting: boolean;\r\n\r\n    /**\r\n     * Default configuration related to image processing available in the standard Material.\r\n     */\r\n    protected _imageProcessingConfiguration: ImageProcessingConfiguration;\r\n\r\n    /**\r\n     * Gets the image processing configuration used either in this material.\r\n     */\r\n    public get imageProcessingConfiguration(): ImageProcessingConfiguration {\r\n        return this._imageProcessingConfiguration;\r\n    }\r\n\r\n    /**\r\n     * Sets the Default image processing configuration used either in the this material.\r\n     *\r\n     * If sets to null, the scene one is in use.\r\n     */\r\n    public set imageProcessingConfiguration(value: ImageProcessingConfiguration) {\r\n        this._attachImageProcessingConfiguration(value);\r\n\r\n        // Ensure the effect will be rebuilt.\r\n        this._markAllSubMeshesAsTexturesDirty();\r\n    }\r\n\r\n    /**\r\n     * Keep track of the image processing observer to allow dispose and replace.\r\n     */\r\n    private _imageProcessingObserver: Nullable<Observer<ImageProcessingConfiguration>>;\r\n\r\n    /**\r\n     * Attaches a new image processing configuration to the Standard Material.\r\n     * @param configuration\r\n     */\r\n    protected _attachImageProcessingConfiguration(configuration: Nullable<ImageProcessingConfiguration>): void {\r\n        if (configuration === this._imageProcessingConfiguration) {\r\n            return;\r\n        }\r\n\r\n        // Detaches observer\r\n        if (this._imageProcessingConfiguration && this._imageProcessingObserver) {\r\n            this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver);\r\n        }\r\n\r\n        // Pick the scene configuration if needed\r\n        if (!configuration) {\r\n            this._imageProcessingConfiguration = this.getScene().imageProcessingConfiguration;\r\n        } else {\r\n            this._imageProcessingConfiguration = configuration;\r\n        }\r\n\r\n        // Attaches observer\r\n        if (this._imageProcessingConfiguration) {\r\n            this._imageProcessingObserver = this._imageProcessingConfiguration.onUpdateParameters.add(() => {\r\n                this._markAllSubMeshesAsImageProcessingDirty();\r\n            });\r\n        }\r\n    }\r\n\r\n    // /**\r\n    //  * Defines additional PrePass parameters for the material.\r\n    //  */\r\n    // public readonly prePassConfiguration: PrePassConfiguration;\r\n\r\n    /**\r\n     * Can this material render to prepass\r\n     * No support for PrePass\r\n     */\r\n    public get isPrePassCapable(): boolean {\r\n        // return !this.disableDepthWrite;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets whether the color curves effect is enabled.\r\n     */\r\n    public get cameraColorCurvesEnabled(): boolean {\r\n        return this.imageProcessingConfiguration.colorCurvesEnabled;\r\n    }\r\n    /**\r\n     * Sets whether the color curves effect is enabled.\r\n     */\r\n    public set cameraColorCurvesEnabled(value: boolean) {\r\n        this.imageProcessingConfiguration.colorCurvesEnabled = value;\r\n    }\r\n\r\n    /**\r\n     * Gets whether the color grading effect is enabled.\r\n     */\r\n    public get cameraColorGradingEnabled(): boolean {\r\n        return this.imageProcessingConfiguration.colorGradingEnabled;\r\n    }\r\n    /**\r\n     * Gets whether the color grading effect is enabled.\r\n     */\r\n    public set cameraColorGradingEnabled(value: boolean) {\r\n        this.imageProcessingConfiguration.colorGradingEnabled = value;\r\n    }\r\n\r\n    /**\r\n     * Gets whether tonemapping is enabled or not.\r\n     */\r\n    public get cameraToneMappingEnabled(): boolean {\r\n        return this._imageProcessingConfiguration.toneMappingEnabled;\r\n    }\r\n    /**\r\n     * Sets whether tonemapping is enabled or not\r\n     */\r\n    public set cameraToneMappingEnabled(value: boolean) {\r\n        this._imageProcessingConfiguration.toneMappingEnabled = value;\r\n    }\r\n\r\n    /**\r\n     * The camera exposure used on this material.\r\n     * This property is here and not in the camera to allow controlling exposure without full screen post process.\r\n     * This corresponds to a photographic exposure.\r\n     */\r\n    public get cameraExposure(): number {\r\n        return this._imageProcessingConfiguration.exposure;\r\n    }\r\n    /**\r\n     * The camera exposure used on this material.\r\n     * This property is here and not in the camera to allow controlling exposure without full screen post process.\r\n     * This corresponds to a photographic exposure.\r\n     */\r\n    public set cameraExposure(value: number) {\r\n        this._imageProcessingConfiguration.exposure = value;\r\n    }\r\n\r\n    /**\r\n     * Gets The camera contrast used on this material.\r\n     */\r\n    public get cameraContrast(): number {\r\n        return this._imageProcessingConfiguration.contrast;\r\n    }\r\n\r\n    /**\r\n     * Sets The camera contrast used on this material.\r\n     */\r\n    public set cameraContrast(value: number) {\r\n        this._imageProcessingConfiguration.contrast = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the Color Grading 2D Lookup Texture.\r\n     */\r\n    public get cameraColorGradingTexture(): Nullable<BaseTexture> {\r\n        return this._imageProcessingConfiguration.colorGradingTexture;\r\n    }\r\n    /**\r\n     * Sets the Color Grading 2D Lookup Texture.\r\n     */\r\n    public set cameraColorGradingTexture(value: Nullable<BaseTexture>) {\r\n        this._imageProcessingConfiguration.colorGradingTexture = value;\r\n    }\r\n\r\n    /**\r\n     * The color grading curves provide additional color adjustmnent that is applied after any color grading transform (3D LUT).\r\n     * They allow basic adjustment of saturation and small exposure adjustments, along with color filter tinting to provide white balance adjustment or more stylistic effects.\r\n     * These are similar to controls found in many professional imaging or colorist software. The global controls are applied to the entire image. For advanced tuning, extra controls are provided to adjust the shadow, midtone and highlight areas of the image;\r\n     * corresponding to low luminance, medium luminance, and high luminance areas respectively.\r\n     */\r\n    public get cameraColorCurves(): Nullable<ColorCurves> {\r\n        return this._imageProcessingConfiguration.colorCurves;\r\n    }\r\n    /**\r\n     * The color grading curves provide additional color adjustment that is applied after any color grading transform (3D LUT).\r\n     * They allow basic adjustment of saturation and small exposure adjustments, along with color filter tinting to provide white balance adjustment or more stylistic effects.\r\n     * These are similar to controls found in many professional imaging or colorist software. The global controls are applied to the entire image. For advanced tuning, extra controls are provided to adjust the shadow, midtone and highlight areas of the image;\r\n     * corresponding to low luminance, medium luminance, and high luminance areas respectively.\r\n     */\r\n    public set cameraColorCurves(value: Nullable<ColorCurves>) {\r\n        this._imageProcessingConfiguration.colorCurves = value;\r\n    }\r\n\r\n    /**\r\n     * Can this material render to several textures at once\r\n     */\r\n    public get canRenderToMRT() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Defines the detail map parameters for the material.\r\n     */\r\n    public readonly detailMap: DetailMapConfiguration;\r\n\r\n    protected _renderTargets = new SmartArray<RenderTargetTexture>(16);\r\n    protected _worldViewProjectionMatrix = Matrix.Zero();\r\n    protected _globalAmbientColor = new Color3(0, 0, 0);\r\n    protected _useLogarithmicDepth: boolean;\r\n    protected _cacheHasRenderTargetTextures = false;\r\n    //#endregion\r\n    //#region MToon parameters\r\n    private _bumpScale = 1.0;\r\n    @serialize()\r\n    public get bumpScale() {\r\n        return this._bumpScale;\r\n    }\r\n    public set bumpScale(value: number) {\r\n        this._bumpScale = value;\r\n    }\r\n    private _receiveShadowRate = 1.0;\r\n    @serialize()\r\n    public get receiveShadowRate() {\r\n        return this._receiveShadowRate;\r\n    }\r\n    public set receiveShadowRate(value: number) {\r\n        this._receiveShadowRate = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _shadingGradeRate = 1.0;\r\n    @serialize()\r\n    public get shadingGradeRate() {\r\n        return this._shadingGradeRate;\r\n    }\r\n    public set shadingGradeRate(value: number) {\r\n        this._shadingGradeRate = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _shadeShift = 0.0;\r\n    @serialize()\r\n    public get shadeShift() {\r\n        return this._shadeShift;\r\n    }\r\n    public set shadeShift(value: number) {\r\n        this._shadeShift = Math.max(-1.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _shadeToony = 0.9;\r\n    @serialize()\r\n    public get shadeToony() {\r\n        return this._shadeToony;\r\n    }\r\n    public set shadeToony(value: number) {\r\n        this._shadeToony = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _lightColorAttenuation = 0.0;\r\n    @serialize()\r\n    public get lightColorAttenuation() {\r\n        return this._lightColorAttenuation;\r\n    }\r\n    public set lightColorAttenuation(value: number) {\r\n        this._lightColorAttenuation = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _indirectLightIntensity = 0.1;\r\n    @serialize()\r\n    public get indirectLightIntensity() {\r\n        return this._indirectLightIntensity;\r\n    }\r\n    public set indirectLightIntensity(value: number) {\r\n        this._indirectLightIntensity = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _rimLightingMix = 0;\r\n    @serialize()\r\n    public get rimLightingMix() {\r\n        return this._rimLightingMix;\r\n    }\r\n    public set rimLightingMix(value: number) {\r\n        this._rimLightingMix = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _rimFresnelPower = 1;\r\n    @serialize()\r\n    public get rimFresnelPower() {\r\n        return this._rimFresnelPower;\r\n    }\r\n    public set rimFresnelPower(value: number) {\r\n        this._rimFresnelPower = Math.max(0.0, Math.min(100.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _rimLift = 0;\r\n    @serialize()\r\n    public get rimLift() {\r\n        return this._rimLift;\r\n    }\r\n    public set rimLift(value: number) {\r\n        this._rimLift = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _outlineWidth = 0.5;\r\n    @serialize()\r\n    public get outlineWidth() {\r\n        return this._outlineWidth;\r\n    }\r\n    public set outlineWidth(value: number) {\r\n        this._outlineWidth = Math.max(0.01, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsAttributesDirty();\r\n    }\r\n    private _outlineScaledMaxDistance = 1.0;\r\n    @serialize()\r\n    public get outlineScaledMaxDistance() {\r\n        return this._outlineScaledMaxDistance;\r\n    }\r\n    public set outlineScaledMaxDistance(value: number) {\r\n        this._outlineScaledMaxDistance = Math.max(1.0, Math.min(10.0, value));\r\n        this._markAllSubMeshesAsAttributesDirty();\r\n    }\r\n    private _outlineLightingMix = 1.0;\r\n    @serialize()\r\n    public get outlineLightingMix() {\r\n        return this._outlineLightingMix;\r\n    }\r\n    public set outlineLightingMix(value: number) {\r\n        this._outlineLightingMix = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsAttributesDirty();\r\n    }\r\n    private _uvAnimationScrollX = 0.0;\r\n    @serialize()\r\n    public get uvAnimationScrollX() {\r\n        return this._uvAnimationScrollX;\r\n    }\r\n    public set uvAnimationScrollX(value: number) {\r\n        this._uvAnimationScrollX = value;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    private _uvAnimationScrollY = 0.0;\r\n    @serialize()\r\n    public get uvAnimationScrollY() {\r\n        return this._uvAnimationScrollY;\r\n    }\r\n    public set uvAnimationScrollY(value: number) {\r\n        this._uvAnimationScrollY = value;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    private _uvAnimationRotation = 0.0;\r\n    @serialize()\r\n    public get uvAnimationRotation() {\r\n        return this._uvAnimationRotation;\r\n    }\r\n    public set uvAnimationRotation(value: number) {\r\n        this._uvAnimationRotation = value;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n\r\n    @serialize('alphaTest')\r\n    private _alphaTest = false;\r\n    @serialize()\r\n    public get alphaTest() {\r\n        return this._alphaTest;\r\n    }\r\n    public set alphaTest(value: boolean) {\r\n        this._alphaTest = value;\r\n        if (value) {\r\n            if (this.alphaBlend) {\r\n                this._transparencyMode = Material.MATERIAL_ALPHATESTANDBLEND;\r\n            } else {\r\n                this._transparencyMode = Material.MATERIAL_ALPHATEST;\r\n            }\r\n        } else {\r\n            if (this.alphaBlend) {\r\n                this._transparencyMode = Material.MATERIAL_ALPHABLEND;\r\n            } else {\r\n                this._transparencyMode = Material.MATERIAL_OPAQUE;\r\n            }\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    private _alphaBlend = false;\r\n    @serialize()\r\n    public get alphaBlend() {\r\n        return this._alphaBlend;\r\n    }\r\n    public set alphaBlend(value: boolean) {\r\n        this._alphaBlend = value;\r\n        if (value) {\r\n            this.backFaceCulling = true;\r\n            if (this.alphaTest) {\r\n                this._transparencyMode = Material.MATERIAL_ALPHATESTANDBLEND;\r\n            } else {\r\n                this._transparencyMode = Material.MATERIAL_ALPHABLEND;\r\n            }\r\n        } else {\r\n            if (this.alphaTest) {\r\n                this._transparencyMode = Material.MATERIAL_ALPHATEST;\r\n            } else {\r\n                this._transparencyMode = Material.MATERIAL_OPAQUE;\r\n            }\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    @serialize('debugMode')\r\n    private _debugMode = DebugMode.None;\r\n    /** @hidden */\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public debugMode: DebugMode = DebugMode.None;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private outlineRenderer?: MToonOutlineRenderer;\r\n    private _outlineWidthMode: OutlineWidthMode = OutlineWidthMode.None;\r\n    public get outlineWidthMode() {\r\n        return this._outlineWidthMode;\r\n    }\r\n    public set outlineWidthMode(value: OutlineWidthMode) {\r\n        this._outlineWidthMode = value;\r\n        if (value !== OutlineWidthMode.None && !this.outlineRenderer) {\r\n            /**\r\n             * このマテリアル用のアウトラインレンダラーを生成する\r\n             */\r\n            this.outlineRenderer = new MToonOutlineRenderer(this.getScene(), this);\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private isOutline: number = 0.0;\r\n    public enableOutlineRender(): void {\r\n        this.isOutline = 1.0;\r\n    }\r\n    public disaableOutlineRender(): void {\r\n        this.isOutline = 0.0;\r\n    }\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public outlineColorMode: OutlineColorMode = OutlineColorMode.MixedLighting;\r\n    private _cullMode: CullMode = CullMode.Back;\r\n    @serialize()\r\n    public get cullMode() {\r\n        return this._cullMode;\r\n    }\r\n    public set cullMode(value: CullMode) {\r\n        this._cullMode = value;\r\n        switch (this._cullMode) {\r\n            case CullMode.Off:\r\n                // 両面を描画する\r\n                this.backFaceCulling = false;\r\n                this.sideOrientation = Material.ClockWiseSideOrientation;\r\n                this.twoSidedLighting = false;\r\n                break;\r\n            case CullMode.Front:\r\n                // 表面を描画しない(=裏面だけ描画する)\r\n                this.backFaceCulling = true;\r\n                this.sideOrientation = Material.CounterClockWiseSideOrientation;\r\n                this.twoSidedLighting = true;\r\n                break;\r\n            case CullMode.Back:\r\n                // 裏面を描画しない(=表面だけ描画する) デフォルト\r\n                this.backFaceCulling = true;\r\n                this.sideOrientation = Material.ClockWiseSideOrientation;\r\n                this.twoSidedLighting = false;\r\n                break;\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    @serialize()\r\n    private _outlineCullMode = CullMode.Front;\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public outlineCullMode: CullMode = CullMode.Front;\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private storedCullMode = CullMode.Back;\r\n    /**\r\n     * アウトライン用 CullMode を設定\r\n     * @hidden\r\n     */\r\n    public applyOutlineCullMode(): void {\r\n        this.storedCullMode = this.cullMode;\r\n        this.cullMode = this._outlineCullMode;\r\n    }\r\n    /**\r\n     * CullMode をリストア\r\n     * @hidden\r\n     */\r\n    public restoreOutlineCullMode(): void {\r\n        this.cullMode = this.storedCullMode;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    public getOutlineRendererName(): string {\r\n        if (!this.outlineRenderer) {\r\n            return '';\r\n        }\r\n        return this.outlineRenderer.name;\r\n    }\r\n    //#endregion\r\n    /**\r\n     * flip mainUv.x if true\r\n     */\r\n    @serialize('flipU')\r\n    public flipU = false;\r\n    /**\r\n     * flip mainUv.y if true\r\n     */\r\n    @serialize('flipV')\r\n    public flipV = false;\r\n    //#endregion\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public constructor(name: string, scene?: Scene) {\r\n        super(name, scene);\r\n\r\n        this.detailMap = new DetailMapConfiguration(this as unknown as StandardMaterial);\r\n\r\n        // Setup the default processing configuration to the scene.\r\n        this._attachImageProcessingConfiguration(null);\r\n        // this.prePassConfiguration = new PrePassConfiguration();\r\n\r\n        this.getRenderTargetTextures = (): SmartArray<RenderTargetTexture> => {\r\n            this._renderTargets.reset();\r\n\r\n            // if (StandardMaterial.ReflectionTextureEnabled && this._reflectionTexture && this._reflectionTexture.isRenderTarget) {\r\n            //     this._renderTargets.push(<RenderTargetTexture>this._reflectionTexture);\r\n            // }\r\n\r\n            // if (StandardMaterial.RefractionTextureEnabled && this._refractionTexture && this._refractionTexture.isRenderTarget) {\r\n            //     this._renderTargets.push(<RenderTargetTexture>this._refractionTexture);\r\n            // }\r\n\r\n            this._eventInfo.renderTargets = this._renderTargets;\r\n            this._callbackPluginEventFillRenderTargetTextures(this._eventInfo);\r\n\r\n            return this._renderTargets;\r\n        };\r\n\r\n        // Register shaders to ShadersStore\r\n        if (!Effect.IncludesShadersStore.mtoonUboDeclaration) {\r\n            Effect.IncludesShadersStore.mtoonUboDeclaration = UboDeclaration;\r\n            Effect.IncludesShadersStore.mtoonVertexDeclaration = VertexDeclaration;\r\n            Effect.IncludesShadersStore.mtoonFragmentDeclaration = FragmentDeclaration;\r\n            Effect.IncludesShadersStore.mtoonFragmentFunctions = FragmentFunctions;\r\n            Effect.IncludesShadersStore.mtoonLightFragment = LightFragment;\r\n            Effect.IncludesShadersStore.mtoonBumpFragment = BumpFragment;\r\n            Effect.ShadersStore.mtoonVertexShader = VertexShader;\r\n            Effect.ShadersStore.mtoonFragmentShader = FragmentShader;\r\n        }\r\n\r\n        // Add properties to Inspactor\r\n        this.inspectableCustomProperties = this.inspectableCustomProperties || [];\r\n        this.inspectableCustomProperties.push(...getInspectableCustomProperties());\r\n    }\r\n\r\n    /**\r\n     * Gets a boolean indicating that current material needs to register RTT\r\n     */\r\n    public get hasRenderTargetTextures(): boolean {\r\n        // if (StandardMaterial.ReflectionTextureEnabled && this._reflectionTexture && this._reflectionTexture.isRenderTarget) {\r\n        //     return true;\r\n        // }\r\n\r\n        // if (StandardMaterial.RefractionTextureEnabled && this._refractionTexture && this._refractionTexture.isRenderTarget) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public getClassName() {\r\n        return 'MToonMaterial';\r\n    }\r\n\r\n    /**\r\n     * In case the depth buffer does not allow enough depth precision for your scene (might be the case in large scenes)\r\n     * You can try switching to logarithmic depth.\r\n     * @see https://doc.babylonjs.com/how_to/using_logarithmic_depth_buffer\r\n     */\r\n    @serialize()\r\n    public get useLogarithmicDepth(): boolean {\r\n        return this._useLogarithmicDepth;\r\n    }\r\n    public set useLogarithmicDepth(value: boolean) {\r\n        const newValue = value && this.getScene().getEngine().getCaps().fragmentDepthSupported;\r\n        if (this._useLogarithmicDepth !== newValue) {\r\n            this._useLogarithmicDepth = newValue;\r\n            this._markAllSubMeshesAsMiscDirty();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public needAlphaBlending(): boolean {\r\n        if (this._disableAlphaBlending) {\r\n            return false;\r\n        }\r\n\r\n        // return (this.alpha < 1.0) || (this._opacityTexture != null) || this._shouldUseAlphaFromDiffuseTexture() || this._opacityFresnelParameters && this._opacityFresnelParameters.isEnabled;\r\n        return this.alpha < 1.0 || this._shouldUseAlphaFromDiffuseTexture();\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public needAlphaTesting(): boolean {\r\n        if (this._forceAlphaTest) {\r\n            return true;\r\n        }\r\n        if (this._alphaTest) {\r\n            return true;\r\n        }\r\n\r\n        return this._hasAlphaChannel() && (this._transparencyMode == null || this._transparencyMode === Material.MATERIAL_ALPHATEST);\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    protected _shouldUseAlphaFromDiffuseTexture(): boolean {\r\n        return this._diffuseTexture != null && this._diffuseTexture.hasAlpha && this._useAlphaFromDiffuseTexture && this._transparencyMode !== Material.MATERIAL_OPAQUE;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    protected _hasAlphaChannel(): boolean {\r\n        return this._diffuseTexture !== null && this._diffuseTexture.hasAlpha; // || this._opacityTexture != null;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public getAlphaTestTexture(): Nullable<BaseTexture> {\r\n        return this._diffuseTexture;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public isReadyForSubMesh(mesh: AbstractMesh, subMesh: SubMesh, useInstances: boolean = false): boolean {\r\n        if (!this._uniformBufferLayoutBuilt) {\r\n            this.buildUniformLayout();\r\n        }\r\n\r\n        if (subMesh.effect && this.isFrozen) {\r\n            if (subMesh.effect._wasPreviouslyReady && subMesh.effect._wasPreviouslyUsingInstances === useInstances) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (!subMesh.materialDefines) {\r\n            this._callbackPluginEventGeneric(MaterialPluginEvent.GetDefineNames, this._eventInfo);\r\n            subMesh.materialDefines = new MToonMaterialDefines();\r\n        }\r\n\r\n        const scene = this.getScene();\r\n        const defines = subMesh.materialDefines as MToonMaterialDefines;\r\n        if (this._isReadyForSubMesh(subMesh)) {\r\n            return true;\r\n        }\r\n\r\n        const engine = scene.getEngine();\r\n\r\n        // Lights\r\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, this.specularSupported, this._maxSimultaneousLights, this._disableLighting);\r\n\r\n        if (this.outlineWidthMode !== OutlineWidthMode.None) {\r\n            // Normals is needed when rendering outline\r\n            defines._needNormals = true;\r\n        }\r\n\r\n        this.applyDefines(defines);\r\n\r\n        // Multiview\r\n        MaterialHelper.PrepareDefinesForMultiview(scene, defines);\r\n\r\n        // PrePass\r\n        const oit = this.needAlphaBlendingForMesh(mesh) && (scene as any).useOrderIndependentTransparency;\r\n        // MaterialHelper.PrepareDefinesForPrePass(scene, defines, this.canRenderToMRT && !oit);\r\n\r\n        // Order independant transparency\r\n        MaterialHelper.PrepareDefinesForOIT(scene, defines, oit);\r\n\r\n        // Textures\r\n        if (defines._areTexturesDirty) {\r\n            this._eventInfo.hasRenderTargetTextures = false;\r\n            this._callbackPluginEventHasRenderTargetTextures(this._eventInfo);\r\n            this._cacheHasRenderTargetTextures = this._eventInfo.hasRenderTargetTextures;\r\n            defines._needUVs = false;\r\n            for (let i = 1; i <= Constants.MAX_SUPPORTED_UV_SETS; ++i) {\r\n                defines['MAINUV' + i] = false;\r\n            }\r\n\r\n            if (scene.texturesEnabled) {\r\n                // Check texture is ready\r\n                if (\r\n                    !this.isReadyForTexture(this._diffuseTexture, defines, 'DIFFUSE') ||\r\n                    !this.isReadyForTexture(this._emissiveTexture, defines, 'EMISSIVE') ||\r\n                    !this.isReadyForTexture(this._shadeTexture, defines, 'SHADE') ||\r\n                    !this.isReadyForTexture(this._receiveShadowTexture, defines, 'RECEIVE_SHADOW') ||\r\n                    !this.isReadyForTexture(this._shadingGradeTexture, defines, 'SHADING_GRADE') ||\r\n                    !this.isReadyForTexture(this._rimTexture, defines, 'RIM') ||\r\n                    !this.isReadyForTexture(this._matCapTexture, defines, 'MATCAP') ||\r\n                    !this.isReadyForTexture(this._outlineWidthTexture, defines, 'OUTLINE_WIDTH') ||\r\n                    !this.isReadyForTexture(this._uvAnimationMaskTexture, defines, 'UV_ANIMATION_MASK')\r\n                ) {\r\n                    return false;\r\n                }\r\n                if (scene.getEngine().getCaps().standardDerivatives && this._bumpTexture) {\r\n                    // Bump texure can not be not blocking.\r\n                    if (!this._bumpTexture.isReady()) {\r\n                        return false;\r\n                    }\r\n                    MaterialHelper.PrepareDefinesForMergedUV(this._bumpTexture, defines, 'BUMP');\r\n\r\n                    defines.PARALLAX = this.useParallax;\r\n                    defines.PARALLAXOCCLUSION = this.useParallaxOcclusion;\r\n\r\n                    defines.OBJECTSPACE_NORMALMAP = this.useObjectSpaceNormalMap;\r\n                } else {\r\n                    defines.BUMP = false;\r\n                    defines.PARALLAX = false;\r\n                    defines.PARALLAXOCCLUSION = false;\r\n                }\r\n\r\n                defines.TWOSIDEDLIGHTING = !this._backFaceCulling && this._twoSidedLighting;\r\n            } else {\r\n                defines.DIFFUSE = false;\r\n                defines.EMISSIVE = false;\r\n                defines.SHADE = false;\r\n                defines.RECEIVE_SHADOW = false;\r\n                defines.SHADING_GRADE = false;\r\n                defines.RIM = false;\r\n                defines.MATCAP = false;\r\n                defines.OUTLINE_WIDTH = false;\r\n                defines.BUMP = false;\r\n                defines.UV_ANIMATION_MASK = false;\r\n            }\r\n\r\n            defines.ALPHAFROMDIFFUSE = this._shouldUseAlphaFromDiffuseTexture();\r\n\r\n            // defines.EMISSIVEASILLUMINATION = this._useEmissiveAsIllumination;\r\n\r\n            // defines.LINKEMISSIVEWITHDIFFUSE = this._linkEmissiveWithDiffuse;\r\n\r\n            // defines.SPECULAROVERALPHA = this._useSpecularOverAlpha;\r\n\r\n            defines.PREMULTIPLYALPHA = this.alphaMode === Constants.ALPHA_PREMULTIPLIED || this.alphaMode === Constants.ALPHA_PREMULTIPLIED_PORTERDUFF;\r\n\r\n            defines.ALPHATEST_AFTERALLALPHACOMPUTATIONS = this.transparencyMode !== null;\r\n\r\n            defines.ALPHABLEND = this.transparencyMode === null || this.needAlphaBlendingForMesh(mesh); // check on null for backward compatibility\r\n        }\r\n\r\n        this._eventInfo.isReadyForSubMesh = true;\r\n        this._eventInfo.defines = defines;\r\n        this._callbackPluginEventIsReadyForSubMesh(this._eventInfo);\r\n\r\n        if (!this._eventInfo.isReadyForSubMesh) {\r\n            return false;\r\n        }\r\n\r\n        if (defines._areImageProcessingDirty && this._imageProcessingConfiguration) {\r\n            if (!this._imageProcessingConfiguration.isReady()) {\r\n                return false;\r\n            }\r\n\r\n            this._imageProcessingConfiguration.prepareDefines(defines);\r\n\r\n            // defines.IS_REFLECTION_LINEAR = (this.reflectionTexture != null && !this.reflectionTexture.gammaSpace);\r\n            // defines.IS_REFRACTION_LINEAR = (this.refractionTexture != null && !this.refractionTexture.gammaSpace);\r\n        }\r\n\r\n        if (this.flipU !== defines.FLIP_U) {\r\n            defines.FLIP_U = this.flipU;\r\n            defines.markAsUnprocessed();\r\n        }\r\n        if (this.flipV !== defines.FLIP_V) {\r\n            defines.FLIP_V = this.flipV;\r\n            defines.markAsUnprocessed();\r\n        }\r\n\r\n        // Misc.\r\n        MaterialHelper.PrepareDefinesForMisc(\r\n            mesh,\r\n            scene,\r\n            this._useLogarithmicDepth,\r\n            this.pointsCloud,\r\n            this.fogEnabled,\r\n            this._shouldTurnAlphaTestOn(mesh) || this._forceAlphaTest,\r\n            defines\r\n        );\r\n\r\n        // Values that need to be evaluated on every frame\r\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances, null, subMesh.getRenderingMesh().hasThinInstances);\r\n\r\n        // External config\r\n        this._eventInfo.defines = defines;\r\n        this._eventInfo.mesh = mesh;\r\n        this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo);\r\n\r\n        // Attribs\r\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, this.useVertexColor, this.useBones, this.useMorphTargets, this.useVertexAlpha, this.useBakedVertexAnimation);\r\n\r\n        // External config\r\n        this._callbackPluginEventPrepareDefines(this._eventInfo);\r\n\r\n        // Get correct effect\r\n        if (defines.isDirty) {\r\n            const lightDisposed = defines._areLightsDisposed;\r\n            defines.markAsProcessed();\r\n\r\n            // Fallbacks\r\n            const fallbacks = new EffectFallbacks();\r\n\r\n            if (defines.BUMP) {\r\n                fallbacks.addFallback(0, 'BUMP');\r\n            }\r\n\r\n            if (defines.PARALLAX) {\r\n                fallbacks.addFallback(1, 'PARALLAX');\r\n            }\r\n\r\n            if (defines.PARALLAXOCCLUSION) {\r\n                fallbacks.addFallback(0, 'PARALLAXOCCLUSION');\r\n            }\r\n\r\n            if (defines.FOG) {\r\n                fallbacks.addFallback(1, 'FOG');\r\n            }\r\n\r\n            if (defines.POINTSIZE) {\r\n                fallbacks.addFallback(0, 'POINTSIZE');\r\n            }\r\n\r\n            if (defines.LOGARITHMICDEPTH) {\r\n                fallbacks.addFallback(0, 'LOGARITHMICDEPTH');\r\n            }\r\n\r\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this._maxSimultaneousLights);\r\n\r\n            if (defines.MULTIVIEW) {\r\n                fallbacks.addFallback(0, 'MULTIVIEW');\r\n            }\r\n\r\n            // Attributes\r\n            const attribs = [VertexBuffer.PositionKind];\r\n\r\n            if (defines.NORMAL) {\r\n                attribs.push(VertexBuffer.NormalKind);\r\n            }\r\n\r\n            if (defines.TANGENT) {\r\n                attribs.push(VertexBuffer.TangentKind);\r\n            }\r\n\r\n            for (let i = 1; i <= Constants.MAX_SUPPORTED_UV_SETS; ++i) {\r\n                if (defines['UV' + i]) {\r\n                    attribs.push(`uv${i === 1 ? '' : i}`);\r\n                }\r\n            }\r\n\r\n            if (defines.INSTANCESCOLOR) {\r\n                attribs.push(VertexBuffer.ColorInstanceKind);\r\n            }\r\n\r\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\r\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\r\n            MaterialHelper.PrepareAttributesForMorphTargets(attribs, mesh, defines);\r\n            MaterialHelper.PrepareAttributesForBakedVertexAnimation(attribs, mesh, defines);\r\n\r\n            const shaderName = 'mtoon';\r\n\r\n            const uniforms = [\r\n                // StandardMaterial uniforms\r\n                'world',\r\n                'view',\r\n                'viewProjection',\r\n                'vEyePosition',\r\n                'vLightsType',\r\n                'vAmbientColor',\r\n                'visibility',\r\n                'vFogInfos',\r\n                'vFogColor',\r\n                'pointSize',\r\n                'mBones',\r\n                'vClipPlane',\r\n                'vClipPlane2',\r\n                'vClipPlane3',\r\n                'vClipPlane4',\r\n                'vClipPlane5',\r\n                'vClipPlane6',\r\n                // \"diffuseLeftColor\", \"diffuseRightColor\", \"opacityParts\", \"reflectionLeftColor\", \"reflectionRightColor\", \"emissiveLeftColor\", \"emissiveRightColor\", \"refractionLeftColor\", \"refractionRightColor\",\r\n                // \"vReflectionPosition\", \"vReflectionSize\", \"vRefractionPosition\", \"vRefractionSize\",\r\n                'logarithmicDepthConstant',\r\n                'vTangentSpaceParams',\r\n                'alphaCutOff',\r\n                'boneTextureWidth',\r\n                'morphTargetTextureInfo',\r\n                'morphTargetTextureIndices',\r\n\r\n                // Texture uniforms\r\n                'vDiffuseColor',\r\n                'vDiffuseInfos',\r\n                'diffuseMatrix',\r\n                'vEmissiveColor',\r\n                'vEmissiveInfos',\r\n                'emissiveMatrix',\r\n                'vBumpInfos',\r\n                'bumpMatrix',\r\n                'vShadeColor',\r\n                'vShadeInfos',\r\n                'shadeMatrix',\r\n                'vReceiveShadowInfos',\r\n                'receiveShadowMatrix',\r\n                'vShadingGradeInfos',\r\n                'shadingGradeMatrix',\r\n                'vRimColor',\r\n                'vRimInfos',\r\n                'RimMatrix',\r\n                'vMatCapInfos',\r\n                'MatCapMatrix',\r\n                'vOutlineColor',\r\n                'vOutlineWidthInfos',\r\n                'outlineWidthMatrix',\r\n\r\n                // MToon uniforms\r\n                'aspect',\r\n                'isOutline',\r\n                'shadingGradeRate',\r\n                'receiveShadowRate',\r\n                'shadeShift',\r\n                'shadeToony',\r\n                'rimLightingMix',\r\n                'rimFresnelPower',\r\n                'rimLift',\r\n                'lightColorAttenuation',\r\n                'indirectLightIntensity',\r\n                'outlineWidth',\r\n                'outlineScaledMaxDistance',\r\n                'outlineLightingMix',\r\n                'uvAnimationScrollX',\r\n                'uvAnimationScrollY',\r\n                'uvAnimationRotation',\r\n                'vEyeUp',\r\n                'time',\r\n\r\n                // Material#bindViewProjection\r\n                'projection',\r\n            ];\r\n\r\n            const samplers = [\r\n                // StandardMaterial samplers\r\n                'diffuseSampler',\r\n                'ambientSampler',\r\n                'emissiveSampler',\r\n                'bumpSampler',\r\n                'boneSampler',\r\n                'morphTargets',\r\n                'oitDepthSampler',\r\n                'oitFrontColorSampler',\r\n\r\n                // MToon samplers\r\n                'shadeSampler',\r\n                'receiveShadowSampler',\r\n                'shadingGradeSampler',\r\n                'rimSampler',\r\n                'matCapSampler',\r\n                'outlineWidthSampler',\r\n                'uvAnimationMaskSampler',\r\n            ];\r\n\r\n            const uniformBuffers = ['Material', 'Scene', 'Mesh'];\r\n\r\n            this._eventInfo.fallbacks = fallbacks;\r\n            this._eventInfo.fallbackRank = 0;\r\n            this._eventInfo.defines = defines;\r\n            this._eventInfo.uniforms = uniforms;\r\n            this._eventInfo.attributes = attribs;\r\n            this._eventInfo.samplers = samplers;\r\n            this._eventInfo.uniformBuffersNames = uniformBuffers;\r\n            this._eventInfo.customCode = undefined;\r\n            this._eventInfo.mesh = mesh;\r\n            this._callbackPluginEventGeneric(MaterialPluginEvent.PrepareEffect, this._eventInfo);\r\n\r\n            // PrePassConfiguration.AddUniforms(uniforms);\r\n            // PrePassConfiguration.AddSamplers(samplers);\r\n\r\n            if (ImageProcessingConfiguration) {\r\n                ImageProcessingConfiguration.PrepareUniforms(uniforms, defines);\r\n                ImageProcessingConfiguration.PrepareSamplers(samplers, defines);\r\n            }\r\n\r\n            MaterialHelper.PrepareUniformsAndSamplersList({\r\n                uniformsNames: uniforms,\r\n                uniformBuffersNames: uniformBuffers,\r\n                samplers,\r\n                defines,\r\n                maxSimultaneousLights: this._maxSimultaneousLights,\r\n            } as IEffectCreationOptions);\r\n\r\n            const csnrOptions: ICustomShaderNameResolveOptions = {};\r\n\r\n            const join = defines.toString();\r\n\r\n            const previousEffect = subMesh.effect;\r\n            let effect = scene.getEngine().createEffect(\r\n                shaderName,\r\n                {\r\n                    attributes: attribs,\r\n                    uniformsNames: uniforms,\r\n                    uniformBuffersNames: uniformBuffers,\r\n                    samplers,\r\n                    defines: join,\r\n                    fallbacks,\r\n                    onCompiled: this.onCompiled,\r\n                    onError: this.onError,\r\n                    indexParameters: {\r\n                        maxSimultaneousLights: this._maxSimultaneousLights,\r\n                        maxSimultaneousMorphTargets: defines.NUM_MORPH_INFLUENCERS,\r\n                    },\r\n                    processFinalCode: csnrOptions.processFinalCode,\r\n                    processCodeAfterIncludes: this._eventInfo.customCode,\r\n                    multiTarget: defines.PREPASS,\r\n                } as IEffectCreationOptions,\r\n                engine\r\n            );\r\n\r\n            if (effect) {\r\n                if (this._onEffectCreatedObservable) {\r\n                    onCreatedEffectParameters.effect = effect;\r\n                    onCreatedEffectParameters.subMesh = subMesh;\r\n                    this._onEffectCreatedObservable.notifyObservers(onCreatedEffectParameters);\r\n                }\r\n\r\n                // Use previous effect while new one is compiling\r\n                if (this.allowShaderHotSwapping && previousEffect && !effect.isReady()) {\r\n                    effect = previousEffect;\r\n                    defines.markAsUnprocessed();\r\n\r\n                    if (lightDisposed) {\r\n                        // re register in case it takes more than one frame.\r\n                        defines._areLightsDisposed = true;\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    scene.resetCachedMaterial();\r\n                    subMesh.setEffect(effect, defines, this._materialContext);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\r\n            return false;\r\n        }\r\n\r\n        defines._renderId = scene.getRenderId();\r\n        subMesh.effect._wasPreviouslyReady = true;\r\n        subMesh.effect._wasPreviouslyUsingInstances = useInstances;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Determine the layout of the UniformBufferObject\r\n     * Must be added in the same order as the `uniform Material` in the shader\r\n     * UBOs can be used to efficiently pass variables to shaders, but only WebGL v2 is supported.\r\n     * babylon.js automatically falls back on WebGL v1\r\n     * The second argument is the number of floats\r\n     */\r\n    public buildUniformLayout(): void {\r\n        const ubo = this._uniformBuffer;\r\n\r\n        ubo.addUniform('vDiffuseColor', 4);\r\n        ubo.addUniform('vDiffuseInfos', 2);\r\n        ubo.addUniform('diffuseMatrix', 16);\r\n\r\n        ubo.addUniform('vEmissiveColor', 3);\r\n        ubo.addUniform('vEmissiveInfos', 2);\r\n        ubo.addUniform('emissiveMatrix', 16);\r\n\r\n        ubo.addUniform('vBumpInfos', 3);\r\n        ubo.addUniform('bumpMatrix', 16);\r\n\r\n        ubo.addUniform('vShadeColor', 3);\r\n        ubo.addUniform('vShadeInfos', 2);\r\n        ubo.addUniform('shadeMatrix', 16);\r\n\r\n        ubo.addUniform('vReceiveShadowInfos', 2);\r\n        ubo.addUniform('receiveShadowMatrix', 16);\r\n\r\n        ubo.addUniform('vShadingGradeInfos', 2);\r\n        ubo.addUniform('shadingGradeMatrix', 16);\r\n\r\n        ubo.addUniform('vRimColor', 3);\r\n        ubo.addUniform('vRimInfos', 2);\r\n        ubo.addUniform('rimMatrix', 16);\r\n\r\n        ubo.addUniform('vMatCapInfos', 2);\r\n        ubo.addUniform('matCapMatrix', 16);\r\n\r\n        ubo.addUniform('vOutlineColor', 3);\r\n        ubo.addUniform('vOutlineWidthInfos', 2);\r\n        ubo.addUniform('outlineWidthMatrix', 16);\r\n\r\n        ubo.addUniform('vUvAnimationMaskInfos', 2);\r\n        ubo.addUniform('uvAnimationMaskMatrix', 16);\r\n\r\n        ubo.addUniform('vTangentSpaceParams', 2);\r\n        ubo.addUniform('pointSize', 1);\r\n\r\n        ubo.addUniform('shadingGradeRate', 1);\r\n        ubo.addUniform('receiveShadowRate', 1);\r\n        ubo.addUniform('shadeShift', 1);\r\n        ubo.addUniform('shadeToony', 1);\r\n        ubo.addUniform('lightColorAttenuation', 1);\r\n        ubo.addUniform('indirectLightIntensity', 1);\r\n        ubo.addUniform('rimLightingMix', 1);\r\n        ubo.addUniform('rimFresnelPower', 1);\r\n        ubo.addUniform('rimLift', 1);\r\n        ubo.addUniform('outlineWidth', 1);\r\n        ubo.addUniform('outlineScaledMaxDistance', 1);\r\n        ubo.addUniform('outlineLightingMix', 1);\r\n        ubo.addUniform('uvAnimationScrollX', 1);\r\n        ubo.addUniform('uvAnimationScrollY', 1);\r\n        ubo.addUniform('uvAnimationRotation', 1);\r\n\r\n        ubo.addUniform('vEyeUp', 3);\r\n        ubo.addUniform('alphaCutOff', 1);\r\n        ubo.addUniform('vAmbientColor', 3);\r\n        ubo.addUniform('aspect', 1);\r\n        ubo.addUniform('isOutline', 1);\r\n        ubo.addUniform('time', 4);\r\n        ubo.addUniform('visibility', 1);\r\n\r\n        super.buildUniformLayout();\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     * Binds current shader variables\r\n     * This method is called every frame, so even if it is redundant, it prefers speed.\r\n     */\r\n    public bindForSubMesh(world: Matrix, mesh: Mesh, subMesh: SubMesh): void {\r\n        const scene = this.getScene();\r\n        const defines = subMesh.materialDefines as MToonMaterialDefines;\r\n        const effect = subMesh.effect;\r\n        if (!defines || !effect) {\r\n            return;\r\n        }\r\n        this._activeEffect = effect;\r\n\r\n        // Matrices Mesh.\r\n        mesh.getMeshUniformBuffer().bindToEffect(effect, 'Mesh');\r\n        mesh.transferToEffect(world);\r\n\r\n        // Binding unconditionally\r\n        this._uniformBuffer.bindToEffect(effect, 'Material');\r\n\r\n        // this.prePassConfiguration.bindForSubMesh(this._activeEffect, scene, mesh, world, this.isFrozen);\r\n\r\n        this._eventInfo.subMesh = subMesh;\r\n        this._callbackPluginEventHardBindForSubMesh(this._eventInfo);\r\n\r\n        // Normal Matrix\r\n        if (defines.OBJECTSPACE_NORMALMAP) {\r\n            world.toNormalMatrix(this._normalMatrix);\r\n            this.bindOnlyNormalMatrix(this._normalMatrix);\r\n        }\r\n\r\n        const mustRebind = this._mustRebind(scene, effect, mesh.visibility);\r\n\r\n        // Bones\r\n        MaterialHelper.BindBonesParameters(mesh, effect);\r\n        const ubo = this._uniformBuffer;\r\n        if (mustRebind) {\r\n            this.bindViewProjection(effect);\r\n            if (!ubo.useUbo || !this.isFrozen || !ubo.isSync) {\r\n                if (scene.texturesEnabled) {\r\n                    this.bindTexture(this._diffuseTexture, ubo, effect, 'diffuse', 'vDiffuseInfos');\r\n                    this.bindTexture(this._emissiveTexture, ubo, effect, 'emissive', 'vEmissiveInfos');\r\n                    if (this._bumpTexture && scene.getEngine().getCaps().standardDerivatives) {\r\n                        ubo.updateFloat3('vBumpInfos', this._bumpTexture.coordinatesIndex, 1.0 / this._bumpTexture.level, this._bumpScale);\r\n                        MaterialHelper.BindTextureMatrix(this._bumpTexture, ubo, 'bump');\r\n                        effect.setTexture(`bumpSampler`, this._bumpTexture);\r\n                        // bumpTexture は babylon.js のデフォルトと反対の状態である\r\n                        if (scene._mirroredCameraPosition) {\r\n                            ubo.updateFloat2('vTangentSpaceParams', this._invertNormalMapX ? 1.0 : -1.0, this._invertNormalMapY ? 1.0 : -1.0);\r\n                        } else {\r\n                            ubo.updateFloat2('vTangentSpaceParams', this._invertNormalMapX ? -1.0 : 1.0, this._invertNormalMapY ? -1.0 : 1.0);\r\n                        }\r\n                    }\r\n                    this.bindTexture(this._shadeTexture, ubo, effect, 'shade', 'vShadeInfos');\r\n                    this.bindTexture(this._receiveShadowTexture, ubo, effect, 'receiveShadow', 'vReceiveShadowInfos');\r\n                    this.bindTexture(this._shadingGradeTexture, ubo, effect, 'shadingGrade', 'vShadingGradeInfos');\r\n                    this.bindTexture(this._rimTexture, ubo, effect, 'rim', 'vRimInfos');\r\n                    this.bindTexture(this._matCapTexture, ubo, effect, 'matCap', 'vMatCapInfos');\r\n                    this.bindTexture(this._outlineWidthTexture, ubo, effect, 'outlineWidth', 'vOutlineWidthInfos');\r\n                    this.bindTexture(this._uvAnimationMaskTexture, ubo, effect, 'uvAnimationMask', 'vUvAnimationMaskInfos');\r\n\r\n                    if (this._hasAlphaChannel()) {\r\n                        ubo.updateFloat('alphaCutOff', this.alphaCutOff);\r\n                    }\r\n                }\r\n\r\n                // Point size\r\n                if (this.pointsCloud) {\r\n                    ubo.updateFloat('pointSize', this.pointSize);\r\n                }\r\n\r\n                // MToon uniforms\r\n                ubo.updateFloat('receiveShadowRate', this._receiveShadowRate);\r\n                ubo.updateFloat('shadingGradeRate', this._shadingGradeRate);\r\n                ubo.updateFloat('shadeShift', this._shadeShift);\r\n                ubo.updateFloat('shadeToony', this._shadeToony);\r\n                ubo.updateFloat('lightColorAttenuation', this._lightColorAttenuation);\r\n                ubo.updateFloat('indirectLightIntensity', this._indirectLightIntensity);\r\n                ubo.updateFloat('rimLightingMix', this._rimLightingMix);\r\n                ubo.updateFloat('rimFresnelPower', this._rimFresnelPower);\r\n                ubo.updateFloat('rimLift', this._rimLift);\r\n                ubo.updateFloat('outlineWidth', this._outlineWidth);\r\n                ubo.updateFloat('outlineScaledMaxDistance', this._outlineScaledMaxDistance);\r\n                ubo.updateFloat('outlineLightingMix', this._outlineLightingMix);\r\n                ubo.updateFloat('uvAnimationScrollX', this._uvAnimationScrollX);\r\n                ubo.updateFloat('uvAnimationScrollY', this._uvAnimationScrollY);\r\n                ubo.updateFloat('uvAnimationRotation', this._uvAnimationRotation);\r\n\r\n                // Colors\r\n                scene.ambientColor.multiplyToRef(this.ambientColor, this._globalAmbientColor);\r\n                ubo.updateColor3('vAmbientColor', this._globalAmbientColor);\r\n                ubo.updateColor4('vDiffuseColor', this.diffuseColor, this.alpha);\r\n                ubo.updateColor3('vEmissiveColor', this.emissiveColor);\r\n                ubo.updateColor3('vShadeColor', this.shadeColor);\r\n                ubo.updateColor3('vRimColor', this.rimColor);\r\n                ubo.updateColor4('vOutlineColor', this.outlineColor, 1.0);\r\n                ubo.updateVector3('vEyeUp', scene.activeCamera!.upVector);\r\n            }\r\n\r\n            // OIT with depth peeling\r\n            const anyScene = scene as any;\r\n            if (anyScene.useOrderIndependentTransparency && this.needAlphaBlendingForMesh(mesh) && anyScene.depthPeelingRenderer) {\r\n                anyScene.depthPeelingRenderer.bind(effect);\r\n            }\r\n\r\n            this._eventInfo.subMesh = subMesh;\r\n            this._callbackPluginEventBindForSubMesh(this._eventInfo);\r\n\r\n            // Clip plane\r\n            MaterialHelper.BindClipPlane(effect, scene);\r\n\r\n            // Colors\r\n            this.bindEyePosition(effect);\r\n        } else if (scene.getEngine()._features.needToAlwaysBindUniformBuffers) {\r\n            this._needToBindSceneUbo = true;\r\n        }\r\n\r\n        if (mustRebind || !this.isFrozen) {\r\n            // Lights\r\n            if (scene.lightsEnabled && !this._disableLighting) {\r\n                MaterialHelper.BindLights(scene, mesh, effect, defines, this._maxSimultaneousLights);\r\n            }\r\n\r\n            // View\r\n            if ((scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) || mesh.receiveShadows) {\r\n                this.bindView(effect);\r\n            }\r\n\r\n            // Fog\r\n            MaterialHelper.BindFogParameters(scene, mesh, effect);\r\n\r\n            // Morph targets\r\n            if (defines.NUM_MORPH_INFLUENCERS) {\r\n                MaterialHelper.BindMorphTargetParameters(mesh, effect);\r\n            }\r\n\r\n            if (defines.BAKED_VERTEX_ANIMATION_TEXTURE) {\r\n                mesh.bakedVertexAnimationManager?.bind(effect, defines.INSTANCES);\r\n            }\r\n\r\n            // Log. depth\r\n            if (this.useLogarithmicDepth) {\r\n                MaterialHelper.BindLogDepth(defines, effect, scene);\r\n            }\r\n\r\n            // image processing\r\n            if (this._imageProcessingConfiguration && !this._imageProcessingConfiguration.applyByPostProcess) {\r\n                this._imageProcessingConfiguration.bind(this._activeEffect);\r\n            }\r\n\r\n            // MToon bindings\r\n            ubo.updateFloat('aspect', scene.getEngine().getAspectRatio(scene.activeCamera!));\r\n            ubo.updateFloat('isOutline', this.isOutline);\r\n\r\n            // this variable is compatible with [Unity's _Time](https://docs.unity3d.com/Manual/SL-UnityShaderVariables.html)\r\n            const t = window.performance.now() / 1000;\r\n            ubo.updateVector4('time', new Vector4(t / 20, t, t * 2, t * 3));\r\n        }\r\n\r\n        this._afterBind(mesh, this._activeEffect);\r\n        ubo.update();\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public getAnimatables(): IAnimatable[] {\r\n        const results: IAnimatable[] = super.getAnimatables();\r\n        for (const texture of this.appendedActiveTextures) {\r\n            if (texture.animations && texture.animations.length > 0) {\r\n                results.push(texture);\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public getActiveTextures(): BaseTexture[] {\r\n        const activeTextures = super.getActiveTextures().concat(this.appendedActiveTextures);\r\n\r\n        return activeTextures;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public hasTexture(texture: BaseTexture): boolean {\r\n        if (super.hasTexture(texture)) {\r\n            return true;\r\n        }\r\n        for (const tex of this.appendedActiveTextures) {\r\n            if (tex === texture) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public dispose(forceDisposeEffect?: boolean, forceDisposeTextures?: boolean): void {\r\n        delete this.outlineRenderer;\r\n        if (forceDisposeTextures) {\r\n            for (const texture of this.appendedActiveTextures) {\r\n                texture.dispose();\r\n            }\r\n        }\r\n\r\n        if (this._imageProcessingConfiguration && this._imageProcessingObserver) {\r\n            this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver);\r\n        }\r\n\r\n        super.dispose(forceDisposeEffect, forceDisposeTextures);\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public clone(name: string): MToonMaterial {\r\n        const result = SerializationHelper.Clone(() => new MToonMaterial(name, this.getScene()), this);\r\n\r\n        result.name = name;\r\n        result.id = name;\r\n\r\n        this.stencil.copyTo(result.stencil);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public static Parse(source: any, scene: Scene, rootUrl: string): MToonMaterial {\r\n        const material = SerializationHelper.Parse(() => new MToonMaterial(source.name, scene), source, scene, rootUrl);\r\n\r\n        if (source.stencil) {\r\n            material.stencil.parse(source.stencil, scene, rootUrl);\r\n        }\r\n\r\n        return material;\r\n    }\r\n\r\n    /**\r\n     * 独自メソッド: テクスチャ情報をバインドする\r\n     * @param texture\r\n     * @param effect\r\n     * @param name\r\n     * @param infoName\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private bindTexture(texture: Nullable<BaseTexture>, ubo: UniformBuffer, effect: Effect, name: string, infoName: string) {\r\n        if (!texture) {\r\n            return;\r\n        }\r\n        this._uniformBuffer.updateFloat2(infoName, texture.coordinatesIndex, texture.level);\r\n        MaterialHelper.BindTextureMatrix(texture, ubo, name);\r\n        effect.setTexture(`${name}Sampler`, texture);\r\n    }\r\n\r\n    /**\r\n     * 独自メソッド: テクスチャの用意が終わっているか確認する\r\n     * @param texture\r\n     * @param defines\r\n     * @param key\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private isReadyForTexture(texture: Nullable<BaseTexture>, defines: any, key: string): boolean {\r\n        if (!texture) {\r\n            defines[key] = false;\r\n            return true;\r\n        }\r\n        if (!texture.isReadyOrNotBlocking()) {\r\n            return false;\r\n        }\r\n        MaterialHelper.PrepareDefinesForMergedUV(texture, defines, key);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 独自メソッド: 定数を設定する\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private applyDefines(defines: any): void {\r\n        switch (this._debugMode) {\r\n            case DebugMode.Normal:\r\n                if (defines.MTOON_DEBUG_NORMAL !== true) {\r\n                    defines.MTOON_DEBUG_NORMAL = true;\r\n                    defines.MTOON_DEBUG_LITSHADERATE = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case DebugMode.LitShadeRate:\r\n                if (defines.MTOON_DEBUG_LITSHADERATE !== true) {\r\n                    defines.MTOON_DEBUG_NORMAL = false;\r\n                    defines.MTOON_DEBUG_LITSHADERATE = true;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case DebugMode.None:\r\n                if (defines.MTOON_DEBUG_NORMAL === true) {\r\n                    defines.MTOON_DEBUG_NORMAL = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                if (defines.MTOON_DEBUG_LITSHADERATE === true) {\r\n                    defines.MTOON_DEBUG_LITSHADERATE = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n        }\r\n        switch (this.outlineWidthMode) {\r\n            case OutlineWidthMode.WorldCorrdinates:\r\n                if (defines.MTOON_OUTLINE_WIDTH_WORLD !== true) {\r\n                    defines.MTOON_OUTLINE_WIDTH_WORLD = true;\r\n                    defines.MTOON_OUTLINE_WIDTH_SCREEN = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case OutlineWidthMode.ScreenCoordinates:\r\n                if (defines.MTOON_OUTLINE_WIDTH_SCREEN !== true) {\r\n                    defines.MTOON_OUTLINE_WIDTH_WORLD = false;\r\n                    defines.MTOON_OUTLINE_WIDTH_SCREEN = true;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case OutlineWidthMode.None:\r\n                if (defines.MTOON_OUTLINE_WIDTH_SCREEN !== false || defines.MTOON_OUTLINE_WIDTH_WORLD !== false) {\r\n                    defines.MTOON_OUTLINE_WIDTH_SCREEN = false;\r\n                    defines.MTOON_OUTLINE_WIDTH_WORLD = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n        }\r\n        switch (this.outlineColorMode) {\r\n            case OutlineColorMode.FixedColor:\r\n                if (defines.MTOON_OUTLINE_COLOR_FIXED !== true) {\r\n                    defines.MTOON_OUTLINE_COLOR_FIXED = true;\r\n                    defines.MTOON_OUTLINE_COLOR_MIXED = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case OutlineColorMode.MixedLighting:\r\n                if (defines.MTOON_OUTLINE_COLOR_MIXED !== true) {\r\n                    defines.MTOON_OUTLINE_COLOR_FIXED = false;\r\n                    defines.MTOON_OUTLINE_COLOR_MIXED = true;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import type { Engine } from '@babylonjs/core/Engines/engine';\r\nimport type { Mesh, _InstancesBatch } from '@babylonjs/core/Meshes/mesh';\r\nimport type { SubMesh } from '@babylonjs/core/Meshes/subMesh';\r\nimport type { Scene } from '@babylonjs/core/scene';\r\nimport type { ISceneComponent } from '@babylonjs/core/sceneComponent';\r\nimport { SceneComponentConstants } from '@babylonjs/core/sceneComponent';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { Matrix } from '@babylonjs/core/Maths/math';\r\nimport type { MToonMaterial } from './mtoon-material';\r\nimport type { Material } from '@babylonjs/core/Materials/material';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst BASE_NAME = 'MToonOutline';\r\n\r\n/**\r\n * MToon outline renderer\r\n * @see OutlineRenderer\r\n */\r\nexport class MToonOutlineRenderer implements ISceneComponent {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public static rendererId = 0;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name: string;\r\n\r\n    private _engine: Engine;\r\n    private _passIdForDrawWrapper: number[];\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * MToonMaterial ごとにインスタンスを生成する\r\n     */\r\n    public constructor(public readonly scene: Scene, public readonly material: MToonMaterial) {\r\n        this.name = `${BASE_NAME}_${material.name}_${MToonOutlineRenderer.rendererId++}`;\r\n        this.scene._addComponent(this);\r\n        this._engine = this.scene.getEngine();\r\n        this._passIdForDrawWrapper = [];\r\n        for (let i = 0; i < 1; ++i) {\r\n            this._passIdForDrawWrapper[i] = this._engine.createRenderPassId(`Outline Renderer (${i})`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * シーン描画前後にレンダリング処理を登録する\r\n     */\r\n    public register(): void {\r\n        this.scene._afterRenderingMeshStage.registerStep(SceneComponentConstants.STEP_AFTERRENDERINGMESH_OUTLINE, this, this._afterRenderingMesh);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public rebuild(): void {\r\n        // Nothing to do here.\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        for (let i = 0; i < this._passIdForDrawWrapper.length; ++i) {\r\n            this._engine.releaseRenderPassId(this._passIdForDrawWrapper[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the outline in the canvas.\r\n     * @param subMesh Defines the sumesh to render\r\n     * @param batch Defines the batch of meshes in case of instances\r\n     * @param renderPassId Render pass id to use to render the mesh\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars\r\n    private render(subMesh: SubMesh, batch: _InstancesBatch, renderPassId?: number): void {\r\n        renderPassId = renderPassId ?? this._passIdForDrawWrapper[0];\r\n        const scene = this.scene;\r\n        const effect = subMesh.effect;\r\n        if (!effect || !effect.isReady() || !this.scene.activeCamera) {\r\n            return;\r\n        }\r\n\r\n        const drawWrapper = subMesh._getDrawWrapper(renderPassId, true);\r\n        if (!drawWrapper) {\r\n            return;\r\n        }\r\n        drawWrapper.setEffect(effect);\r\n        if (!drawWrapper.effect || !drawWrapper.effect.isReady()) {\r\n            return;\r\n        }\r\n\r\n        const ownerMesh = subMesh.getMesh();\r\n        const replacementMesh = ownerMesh._internalAbstractMeshDataInfo._actAsRegularMesh ? ownerMesh : null;\r\n        const renderingMesh = subMesh.getRenderingMesh();\r\n        const effectiveMesh = replacementMesh ? replacementMesh : renderingMesh;\r\n\r\n        if (!scene.activeCamera) {\r\n            return;\r\n        }\r\n\r\n        this.material.applyOutlineCullMode();\r\n        this.material.enableOutlineRender();\r\n        this._engine.enableEffect(drawWrapper);\r\n        if (!this.isHardwareInstancedRendering(subMesh, batch)) {\r\n            renderingMesh._bind(subMesh, effect, this.material.fillMode);\r\n        }\r\n\r\n        this.material._preBind(effect);\r\n\r\n        renderingMesh._processRendering(\r\n            effectiveMesh,\r\n            subMesh,\r\n            effect,\r\n            this.material.fillMode,\r\n            batch,\r\n            this.isHardwareInstancedRendering(subMesh, batch),\r\n            (isInstance: boolean, world: Matrix, effectiveMaterial?: Material) => {\r\n                if (effectiveMaterial) {\r\n                    effectiveMaterial.bindForSubMesh(world, effectiveMesh as Mesh, subMesh);\r\n                }\r\n            },\r\n            this.material\r\n        );\r\n\r\n        this.material.restoreOutlineCullMode();\r\n        this.material.disaableOutlineRender();\r\n    }\r\n\r\n    /**\r\n     * このメッシュを描画した後に実行されるコールバック\r\n     */\r\n    private _afterRenderingMesh(mesh: Mesh, subMesh: SubMesh, batch: _InstancesBatch): void {\r\n        if (!this.willRender(subMesh)) {\r\n            return;\r\n        }\r\n\r\n        const cullBackFaces = this._engine.cullBackFaces;\r\n        this._engine.cullBackFaces = false;\r\n        this.render(subMesh, batch, this._passIdForDrawWrapper[0]);\r\n        this._engine.cullBackFaces = cullBackFaces;\r\n    }\r\n\r\n    /**\r\n     * インスタンシングを行うかどうか\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private isHardwareInstancedRendering(subMesh: SubMesh, batch: _InstancesBatch): boolean {\r\n        if (!this._engine.getCaps().instancedArrays) {\r\n            return false;\r\n        }\r\n        if (batch.visibleInstances[subMesh._id] === null) {\r\n            return false;\r\n        }\r\n        if (typeof batch.visibleInstances[subMesh._id] === 'undefined') {\r\n            return false;\r\n        }\r\n\r\n        return subMesh.getRenderingMesh().hasThinInstances;\r\n    }\r\n\r\n    /**\r\n     * このメッシュでアウトラインを描画するかどうか\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private willRender(subMesh: SubMesh): boolean {\r\n        const material = subMesh.getMaterial() as Nullable<MToonMaterial>;\r\n\r\n        if (!material || material.getClassName() !== 'MToonMaterial' || material.getOutlineRendererName() !== this.name) {\r\n            // このコンポーネントの Material ではない\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { ArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight';\r\nimport { HemisphericLight } from '@babylonjs/core/Lights/hemisphericLight';\r\nimport { PointLight } from '@babylonjs/core/Lights/pointLight';\r\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator';\r\nimport { Texture } from '@babylonjs/core/Materials/Textures/texture';\r\nimport { Color3, Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { CreateSphere } from '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport { CreateTorusKnot } from '@babylonjs/core/Meshes/Builders/torusKnotBuilder';\r\nimport { VertexBuffer } from '@babylonjs/core/Buffers/buffer';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { MToonMaterial } from '../mtoon-material';\r\n\r\nimport '@babylonjs/core/Helpers/sceneHelpers';\r\nimport '@babylonjs/inspector';\r\n\r\nasync function main() {\r\n    const debugProperties = getDebugProperties();\r\n    const canvas = document.getElementById('main-canvas') as HTMLCanvasElement;\r\n    const engine = new Engine(canvas, true, {\r\n        alpha: false,\r\n        disableWebGL2Support: debugProperties.webgl1,\r\n    });\r\n\r\n    const scene = new Scene(engine);\r\n    const camera = new ArcRotateCamera('MainCamera1', 0, 0, 3, new Vector3(0, 1.5, 0), scene, true);\r\n    camera.lowerRadiusLimit = 0.1;\r\n    camera.upperRadiusLimit = 20;\r\n    camera.wheelDeltaPercentage = 0.01;\r\n    camera.setPosition(new Vector3(0, 1.5, -3));\r\n    camera.setTarget(new Vector3(0, 1.5, 0));\r\n    camera.attachControl(canvas);\r\n\r\n    scene.createDefaultEnvironment({\r\n        createGround: true,\r\n        createSkybox: false,\r\n        enableGroundMirror: false,\r\n        enableGroundShadow: false,\r\n    });\r\n\r\n    // Lights\r\n    const directionalLight = new DirectionalLight('DirectionalLight1', new Vector3(1, -0.5, 0.0), scene);\r\n    directionalLight.position = new Vector3(-50, 25, 0);\r\n    directionalLight.setEnabled(true);\r\n    const hemisphericLight = new HemisphericLight('HemisphericLight1', new Vector3(-0.2, -0.8, -1), scene);\r\n    hemisphericLight.setEnabled(false);\r\n    const pointLight = new PointLight('PointLight1', new Vector3(0, 0, 1), scene);\r\n    pointLight.setEnabled(false);\r\n\r\n    // Meshes\r\n    const standardMaterialSphere = CreateSphere('StandardMaterialSphere1', {}, scene);\r\n    standardMaterialSphere.position = new Vector3(1.2, 1.2, 0);\r\n    standardMaterialSphere.receiveShadows = true;\r\n\r\n    const shadowCaster = CreateTorusKnot('ShadowCaster', {}, scene);\r\n    shadowCaster.position = new Vector3(-10.0, 5.0, 0.0);\r\n    shadowCaster.setEnabled(debugProperties.shadow);\r\n    if (debugProperties.shadow) {\r\n        const shadowGenerator = new ShadowGenerator(1024, directionalLight);\r\n        shadowGenerator.addShadowCaster(shadowCaster);\r\n    }\r\n\r\n    const mtoonMaterials: MToonMaterial[] = [];\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialDefault', scene);\r\n        mat.outlineWidthMode = 1;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialNormal', scene);\r\n        mat.outlineWidthMode = 2;\r\n        // Textures from https://www.babylonjs-playground.com/#20OAV9#33\r\n        const diffuse = new Texture('http://i.imgur.com/Wk1cGEq.png', scene);\r\n        diffuse.uScale = 4;\r\n        diffuse.vScale = 4;\r\n        mat.diffuseTexture = diffuse;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.shadeColor = new Color3(0.871, 0.196, 0.416);\r\n        const bump = new Texture('http://i.imgur.com/wGyk6os.png', scene);\r\n        bump.uScale = 4;\r\n        bump.vScale = 4;\r\n        mat.bumpTexture = bump;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialTransparent', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#YDO1F#18\r\n        mat.diffuseTexture = new Texture('https://upload.wikimedia.org/wikipedia/commons/8/87/Alaskan_Malamute%2BBlank.png', scene);\r\n        mat.diffuseTexture.hasAlpha = true;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.alphaBlend = true;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialTransparentCutout', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#YDO1F#18\r\n        mat.diffuseTexture = new Texture('https://upload.wikimedia.org/wikipedia/commons/8/87/Alaskan_Malamute%2BBlank.png', scene);\r\n        mat.diffuseTexture.hasAlpha = true;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.alphaTest = true;\r\n        mat.alphaCutOff = 0.5;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialRim', scene);\r\n        mat.outlineWidthMode = 1;\r\n        mat.diffuseColor = new Color3(0, 0, 0);\r\n        mat.shadeColor = new Color3(0, 0, 0);\r\n        mat.rimColor = new Color3(1, 1, 1);\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialMatCap', scene);\r\n        // Textures from https://www.outworldz.com/cgi/free-seamless-textures.plx?c=UV%20Checker\r\n        mat.matCapTexture = new Texture('resources/matcap.png', scene, true, false);\r\n        mat.diffuseColor = new Color3(0, 0, 0);\r\n        mat.shadeColor = new Color3(0, 0, 0);\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialScroll', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#20OAV9#33\r\n        const diffuse = new Texture('http://i.imgur.com/Wk1cGEq.png', scene);\r\n        diffuse.uScale = 4;\r\n        diffuse.vScale = 4;\r\n        mat.diffuseTexture = diffuse;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.shadeColor = new Color3(0.5, 0.5, 0.5);\r\n\r\n        const bump = new Texture('http://i.imgur.com/wGyk6os.png', scene);\r\n        bump.uScale = 4;\r\n        bump.vScale = 4;\r\n        mat.bumpTexture = bump;\r\n        mat.uvAnimationScrollX = 0.5;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialScrollY', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#20OAV9#33\r\n        const diffuse = new Texture('http://i.imgur.com/Wk1cGEq.png', scene);\r\n        diffuse.uScale = 4;\r\n        diffuse.vScale = 4;\r\n        mat.diffuseTexture = diffuse;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.shadeColor = new Color3(0.5, 0.5, 0.5);\r\n\r\n        const bump = new Texture('http://i.imgur.com/wGyk6os.png', scene);\r\n        bump.uScale = 4;\r\n        bump.vScale = 4;\r\n        mat.bumpTexture = bump;\r\n        mat.uvAnimationScrollY = 0.5;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialRotation', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#20OAV9#33\r\n        const diffuse = new Texture('http://i.imgur.com/Wk1cGEq.png', scene);\r\n        diffuse.uScale = 4;\r\n        diffuse.vScale = 4;\r\n        mat.diffuseTexture = diffuse;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.shadeColor = new Color3(0.5, 0.5, 0.5);\r\n\r\n        const bump = new Texture('http://i.imgur.com/wGyk6os.png', scene);\r\n        bump.uScale = 4;\r\n        bump.vScale = 4;\r\n        mat.bumpTexture = bump;\r\n        mat.uvAnimationRotation = 0.1;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n\r\n    mtoonMaterials.forEach((mat, index) => {\r\n        // MToonMaterial は glTF(右手座標) を考慮しているため、 CullMode をデフォルトから反転させる\r\n        mat.cullMode = 1;\r\n        const sphere = CreateSphere(`${mat.name}_Sphere`, {}, scene);\r\n        sphere.position = new Vector3(-1.2 * index, 1.2, 0);\r\n        sphere.receiveShadows = true;\r\n        sphere.material = mat;\r\n    });\r\n\r\n    {\r\n        // No Normal\r\n        const mat = new MToonMaterial('MToonMaterialNoNormal', scene);\r\n        mat.cullMode = 1;\r\n        mat.outlineCullMode = 2;\r\n        mat.outlineWidthMode = 1;\r\n        const sphere = CreateSphere('MToonMaterialNoNormal_Sphere', {}, scene);\r\n        sphere.position = new Vector3(2.4, 1.2, 0);\r\n        sphere.receiveShadows = true;\r\n        sphere.material = mat;\r\n        if (sphere.geometry) {\r\n            sphere.geometry.removeVerticesData(VertexBuffer.NormalKind);\r\n        }\r\n    }\r\n\r\n    if (debugProperties.inspector) {\r\n        await scene.debugLayer.show({\r\n            globalRoot: document.getElementById('wrapper') as HTMLElement,\r\n            handleResize: true,\r\n        });\r\n    }\r\n\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n        shadowCaster.rotate(Vector3.Up(), 0.01);\r\n    });\r\n    window.addEventListener('resize', () => {\r\n        engine.resize();\r\n    });\r\n    (window as any).currentScene = scene;\r\n}\r\n\r\ninterface DebugProperties {\r\n    webgl1: boolean;\r\n    shadow: boolean;\r\n    inspector: boolean;\r\n}\r\n\r\nfunction getDebugProperties(): DebugProperties {\r\n    const href = window.location.href;\r\n\r\n    return {\r\n        webgl1: href.includes('webgl1'),\r\n        shadow: href.includes('shadow'),\r\n        inspector: href.includes('inspector'),\r\n    };\r\n}\r\n\r\nmain().catch((reason) => {\r\n    console.error(reason);\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbabylon_mtoon_material\"] = self[\"webpackChunkbabylon_mtoon_material\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors~main\"], () => (__webpack_require__(\"./src/test/index.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}